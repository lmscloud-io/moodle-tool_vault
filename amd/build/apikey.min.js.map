{"version":3,"file":"apikey.min.js","sources":["../src/apikey.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allows to enter API key\n *\n * @module     tool_vault/apikey\n * @copyright  2023 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Pending from 'core/pending';\nimport Notification from 'core/notification';\n\n/**\n * Open form to enter API key\n *\n * @param {String} apikey\n * @param {Boolean} autoSubmit\n */\nconst openApikeyForm = (apikey = '', autoSubmit = false) => {\n    const pendingPromise = new Pending('tool_vault/apikeyform:open');\n    closeLoginSignupModal();\n\n    const formContainer = document.getElementById('getapikey_formplaceholder');\n    const apikeyForm = new DynamicForm(formContainer, '\\\\tool_vault\\\\form\\\\apikey_form');\n\n    // After submitting reresh the page.\n    apikeyForm.addEventListener(apikeyForm.events.FORM_SUBMITTED, () => location.reload());\n\n    apikeyForm.load({apikey})\n        .then(() => {\n            if (autoSubmit) {\n                apikeyForm.submitFormAjax();\n            }\n            return pendingPromise.resolve();\n        })\n        .catch(Notification.exception);\n};\n\nconst closeApikeyForm = () => {\n    const formContainer = document.getElementById('getapikey_formplaceholder');\n    formContainer.innerHTML = '';\n};\n\nconst openLoginSignupModal = () => {\n    closeApikeyForm();\n\n    const loginSignupButton = document.getElementById('getapikey_loginsignup');\n    const loginSignupIframe = document.getElementById('getapikey_iframe');\n    const url = (loginSignupButton && loginSignupIframe) ? loginSignupButton.dataset.target : null;\n\n    loginSignupIframe.src = url;\n    loginSignupIframe.style.display = 'block';\n};\n\nconst closeLoginSignupModal = () => {\n    const loginSignupIframe = document.getElementById('getapikey_iframe');\n    loginSignupIframe.style.display = 'none';\n    loginSignupIframe.src = 'about:blank';\n};\n\nexport const init = () => {\n    const loginSignupButton = document.getElementById('getapikey_loginsignup');\n    const enterApikeyButton = document.getElementById('getapikey_enterapikey');\n    const loginSignupIframe = document.getElementById('getapikey_iframe');\n    const url = (loginSignupButton && loginSignupIframe) ? loginSignupButton.dataset.target : null;\n\n    if (!url) {\n        return;\n    }\n    const urlHost = url.match(/^(https?:\\/\\/[^/]+)(.*)$/)[1];\n\n    loginSignupButton.onclick = openLoginSignupModal;\n\n    enterApikeyButton.onclick = () => openApikeyForm();\n\n    window.addEventListener(\n        \"message\",\n        (event) => {\n            if (event.origin !== urlHost || !event.data || !(typeof event.data === 'object')) {\n                return;\n            }\n            if (event.data.action === 'apikey') {\n                openApikeyForm(event.data.apikey, true);\n            } else if (event.data.action === 'close') {\n                closeLoginSignupModal();\n            }\n        },\n        false);\n\n\n};"],"names":["openApikeyForm","apikey","autoSubmit","pendingPromise","Pending","closeLoginSignupModal","formContainer","document","getElementById","apikeyForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","location","reload","load","then","submitFormAjax","resolve","catch","Notification","exception","openLoginSignupModal","innerHTML","loginSignupButton","loginSignupIframe","url","dataset","target","src","style","display","enterApikeyButton","urlHost","match","onclick","window","event","origin","data","action"],"mappings":";;;;;;;wOAiCMA,eAAiB,eAACC,8DAAS,GAAIC,yEAC3BC,eAAiB,IAAIC,iBAAQ,8BACnCC,8BAEMC,cAAgBC,SAASC,eAAe,6BACxCC,WAAa,IAAIC,qBAAYJ,cAAe,mCAGlDG,WAAWE,iBAAiBF,WAAWG,OAAOC,gBAAgB,IAAMC,SAASC,WAE7EN,WAAWO,KAAK,CAACf,OAAAA,SACZgB,MAAK,KACEf,YACAO,WAAWS,iBAERf,eAAegB,aAEzBC,MAAMC,sBAAaC,YAQtBC,qBAAuB,KAJHhB,SAASC,eAAe,6BAChCgB,UAAY,SAMpBC,kBAAoBlB,SAASC,eAAe,yBAC5CkB,kBAAoBnB,SAASC,eAAe,oBAC5CmB,IAAOF,mBAAqBC,kBAAqBD,kBAAkBG,QAAQC,OAAS,KAE1FH,kBAAkBI,IAAMH,IACxBD,kBAAkBK,MAAMC,QAAU,SAGhC3B,sBAAwB,WACpBqB,kBAAoBnB,SAASC,eAAe,oBAClDkB,kBAAkBK,MAAMC,QAAU,OAClCN,kBAAkBI,IAAM,6BAGR,WACVL,kBAAoBlB,SAASC,eAAe,yBAC5CyB,kBAAoB1B,SAASC,eAAe,yBAC5CkB,kBAAoBnB,SAASC,eAAe,oBAC5CmB,IAAOF,mBAAqBC,kBAAqBD,kBAAkBG,QAAQC,OAAS,SAErFF,iBAGCO,QAAUP,IAAIQ,MAAM,4BAA4B,GAEtDV,kBAAkBW,QAAUb,qBAE5BU,kBAAkBG,QAAU,IAAMpC,iBAElCqC,OAAO1B,iBACH,WACC2B,QACOA,MAAMC,SAAWL,SAAYI,MAAME,MAAgC,iBAAfF,MAAME,OAGpC,WAAtBF,MAAME,KAAKC,OACXzC,eAAesC,MAAME,KAAKvC,QAAQ,GACL,UAAtBqC,MAAME,KAAKC,QAClBpC,4BAGR"}