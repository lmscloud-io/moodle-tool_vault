{"version":3,"file":"apikey.min.js","sources":["../src/apikey.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Allows to enter API key\n *\n * @module     tool_vault/apikey\n * @copyright  2023 Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport Pending from 'core/pending';\nimport Notification from 'core/notification';\nimport * as Signon from './signon';\nimport {SELECTORS} from './selectors';\n\n/**\n * Open form to enter API key\n *\n * @param {String} apikey\n * @param {Boolean} autoSubmit\n */\nconst openApikeyForm = (apikey = '', autoSubmit = false) => {\n    const pendingPromise = new Pending('tool_vault/apikeyform:open');\n    Signon.closeLoginSignupModal();\n\n    const formContainer = document.querySelector(SELECTORS.APIKEY_FORM_CONTAINER);\n    const apikeyForm = new DynamicForm(formContainer, '\\\\tool_vault\\\\form\\\\apikey_form');\n\n    // After submitting reresh the page.\n    apikeyForm.addEventListener(apikeyForm.events.FORM_SUBMITTED, () => location.reload());\n\n    apikeyForm.load({apikey})\n        .then(() => {\n            if (autoSubmit) {\n                apikeyForm.submitFormAjax();\n            }\n            return pendingPromise.resolve();\n        })\n        .catch(Notification.exception);\n};\n\n/**\n * Initialise listeners on the page\n */\nexport const init = () => {\n    Signon.init((event) => {\n        if (event.data.action === 'apikey') {\n            openApikeyForm(event.data.apikey, true);\n        }\n    });\n\n    const enterApikeyButton = document.querySelector(SELECTORS.ENTER_KEY_BUTTON);\n    enterApikeyButton.addEventListener('click', () => openApikeyForm());\n};\n"],"names":["openApikeyForm","apikey","autoSubmit","pendingPromise","Pending","Signon","closeLoginSignupModal","formContainer","document","querySelector","SELECTORS","APIKEY_FORM_CONTAINER","apikeyForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","location","reload","load","then","submitFormAjax","resolve","catch","Notification","exception","init","event","data","action","ENTER_KEY_BUTTON"],"mappings":";;;;;;;o4BAmCMA,eAAiB,eAACC,8DAAS,GAAIC,yEAC3BC,eAAiB,IAAIC,iBAAQ,8BACnCC,OAAOC,8BAEDC,cAAgBC,SAASC,cAAcC,qBAAUC,uBACjDC,WAAa,IAAIC,qBAAYN,cAAe,mCAGlDK,WAAWE,iBAAiBF,WAAWG,OAAOC,gBAAgB,IAAMC,SAASC,WAE7EN,WAAWO,KAAK,CAAClB,OAAAA,SACZmB,MAAK,KACElB,YACAU,WAAWS,iBAERlB,eAAemB,aAEzBC,MAAMC,sBAAaC,0BAMR,KAChBpB,OAAOqB,MAAMC,QACiB,WAAtBA,MAAMC,KAAKC,QACX7B,eAAe2B,MAAMC,KAAK3B,QAAQ,MAIhBO,SAASC,cAAcC,qBAAUoB,kBACzChB,iBAAiB,SAAS,IAAMd"}