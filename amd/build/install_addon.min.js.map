{"version":3,"file":"install_addon.min.js","sources":["../src/install_addon.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Links to install add-on plugins\n *\n * @module     tool_vault/install_addon\n * @copyright  Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {SELECTORS} from './selectors';\nimport {get_string as getString} from 'core/str';\nimport {add as addToast} from 'core/toast';\nimport Notification from 'core/notification';\n\nlet initialised = false;\nconst CLICOMMAND = 'php admin/tool/vault/cli/addon_plugins.php';\n\n/**\n * Initialise listeners on the page\n */\nexport const init = () => {\n    if (initialised) {\n        return;\n    }\n    initialised = true;\n\n    document.querySelectorAll(SELECTORS.ADDON_PLUGIN_REGION).forEach(pluginRegionNode => {\n        pluginRegionNode.querySelectorAll(SELECTORS.ADDON_VERSION_RADIO).forEach(el => {\n            el.addEventListener('change', () => updateCliInstructions(pluginRegionNode, el));\n        });\n        const initialRadio = pluginRegionNode.querySelector(SELECTORS.ADDON_VERSION_RADIO + ':checked');\n        updateCliInstructions(pluginRegionNode, initialRadio);\n\n        const cliButton = pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_BUTTON);\n        const installButton = pluginRegionNode.dataset.writable ?\n            pluginRegionNode.querySelector(SELECTORS.ADDON_INSTALL_BUTTON) : null;\n        const pluginname = pluginRegionNode.dataset.pluginname;\n\n        installButton?.addEventListener('click', e => {\n            e.preventDefault();\n            window.console.log('Add-on install button pressed');\n            const source = pluginRegionNode.querySelector(SELECTORS.ADDON_VERSION_RADIO + ':checked')?.value;\n            openInstallAddonForm(pluginRegionNode, {pluginname, source});\n        });\n\n        cliButton?.addEventListener('click', e => {\n            e.preventDefault();\n            window.console.log('Add-on cli button pressed');\n            pluginRegionNode.dataset.cliexpanded = `${pluginRegionNode.dataset.cliexpanded}` === \"1\" ? \"0\" : \"1\";\n        });\n    });\n};\n\n/**\n * Return value for the 'cli instructions'\n *\n * @param {Node} pluginRegionNode\n * @param {Node} el selected radio input\n */\nconst updateCliInstructions = (pluginRegionNode, el) => {\n    const cli = pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_REGION);\n    if (!cli) {\n        return;\n    }\n    if (!el) {\n        cli.innerHTML = '';\n        return;\n    }\n    const source = `${el.value}`;\n    const pluginname = pluginRegionNode.dataset.pluginname + el.dataset.exactversion;\n    if (source === '') {\n        cli.innerHTML = '';\n    } else if (source.match(/^backupkey\\//)) {\n        cli.innerHTML = '<pre>' + CLICOMMAND +\n            ' --backupkey=' + source.substring(10) + ' --name=' + pluginname + '</pre>';\n    } else {\n        cli.innerHTML = '<pre>' + CLICOMMAND + ' --name=' + pluginname + '</pre>';\n    }\n};\n\n/**\n * Open form to enter API key\n *\n * @param {Node} pluginRegionNode\n * @param {Object} args\n */\nconst openInstallAddonForm = (pluginRegionNode, args) => {\n\n    const modalForm = new ModalForm({\n        modalConfig: {\n            title: 'Install add-on plugin',\n        },\n        formClass: '\\\\tool_vault\\\\form\\\\install_plugin_form',\n        args,\n        saveButtonText: getString('continue', 'moodle')\n    });\n\n    // Show a toast notification when the form is submitted.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n        if (event.detail.success) {\n            addToast(event.detail.output);\n            pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_BUTTON)?.remove();\n            pluginRegionNode.querySelector(SELECTORS.ADDON_INSTALL_BUTTON)?.remove();\n            pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_REGION)?.remove();\n            pluginRegionNode.querySelectorAll(SELECTORS.ADDON_VERSION_RADIO).forEach(el => {\n                if (el.value !== args.source) {\n                    el.closest('label')?.classList.add('dimmed_text');\n                }\n                el.remove();\n            });\n        } else {\n            return Notification.alert(\n                getString('error', 'moodle'),\n                event.detail.output\n            );\n        }\n        return event.detail.success;\n    });\n\n    modalForm.show();\n};\n"],"names":["initialised","CLICOMMAND","document","querySelectorAll","SELECTORS","ADDON_PLUGIN_REGION","forEach","pluginRegionNode","ADDON_VERSION_RADIO","el","addEventListener","updateCliInstructions","initialRadio","querySelector","cliButton","ADDON_CLI_BUTTON","installButton","dataset","writable","ADDON_INSTALL_BUTTON","pluginname","e","preventDefault","window","console","log","source","_pluginRegionNode$que","value","openInstallAddonForm","cliexpanded","cli","ADDON_CLI_REGION","innerHTML","exactversion","match","substring","args","modalForm","ModalForm","modalConfig","title","formClass","saveButtonText","events","FORM_SUBMITTED","event","detail","success","output","remove","closest","classList","add","Notification","alert","show"],"mappings":";;;;;;;wLA6BIA,aAAc,QACZC,WAAa,2DAKC,KACZD,cAGJA,aAAc,EAEdE,SAASC,iBAAiBC,qBAAUC,qBAAqBC,SAAQC,mBAC7DA,iBAAiBJ,iBAAiBC,qBAAUI,qBAAqBF,SAAQG,KACrEA,GAAGC,iBAAiB,UAAU,IAAMC,sBAAsBJ,iBAAkBE,eAE1EG,aAAeL,iBAAiBM,cAAcT,qBAAUI,oBAAsB,YACpFG,sBAAsBJ,iBAAkBK,oBAElCE,UAAYP,iBAAiBM,cAAcT,qBAAUW,kBACrDC,cAAgBT,iBAAiBU,QAAQC,SAC3CX,iBAAiBM,cAAcT,qBAAUe,sBAAwB,KAC/DC,WAAab,iBAAiBU,QAAQG,WAE5CJ,MAAAA,eAAAA,cAAeN,iBAAiB,SAASW,8BACrCA,EAAEC,iBACFC,OAAOC,QAAQC,IAAI,uCACbC,qCAASnB,iBAAiBM,cAAcT,qBAAUI,oBAAsB,oDAA/DmB,sBAA4EC,MAC3FC,qBAAqBtB,iBAAkB,CAACa,WAAAA,WAAYM,OAAAA,YAGxDZ,MAAAA,WAAAA,UAAWJ,iBAAiB,SAASW,IACjCA,EAAEC,iBACFC,OAAOC,QAAQC,IAAI,6BACnBlB,iBAAiBU,QAAQa,YAA4D,MAA9C,UAAGvB,iBAAiBU,QAAQa,aAAwB,IAAM,kBAWvGnB,sBAAwB,CAACJ,iBAAkBE,YACvCsB,IAAMxB,iBAAiBM,cAAcT,qBAAU4B,sBAChDD,eAGAtB,eACDsB,IAAIE,UAAY,UAGdP,iBAAYjB,GAAGmB,OACfR,WAAab,iBAAiBU,QAAQG,WAAaX,GAAGQ,QAAQiB,aACrD,KAAXR,OACAK,IAAIE,UAAY,GACTP,OAAOS,MAAM,gBACpBJ,IAAIE,UAAY,QAAUhC,WACtB,gBAAkByB,OAAOU,UAAU,IAAM,WAAahB,WAAa,SAEvEW,IAAIE,UAAY,QAAUhC,WAAa,WAAamB,WAAa,UAUnES,qBAAuB,CAACtB,iBAAkB8B,cAEtCC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,MAAO,yBAEXC,UAAW,0CACXL,KAAAA,KACAM,gBAAgB,mBAAU,WAAY,YAI1CL,UAAU5B,iBAAiB4B,UAAUM,OAAOC,gBAAgBC,eACpDA,MAAMC,OAAOC,wBACJF,MAAMC,OAAOE,uCACtB1C,iBAAiBM,cAAcT,qBAAUW,4EAAmBmC,wCAC5D3C,iBAAiBM,cAAcT,qBAAUe,gFAAuB+B,wCAChE3C,iBAAiBM,cAAcT,qBAAU4B,4EAAmBkB,SAC5D3C,iBAAiBJ,iBAAiBC,qBAAUI,qBAAqBF,SAAQG,qBACjEA,GAAGmB,QAAUS,KAAKX,6BAClBjB,GAAG0C,QAAQ,6CAAUC,UAAUC,IAAI,gBAEvC5C,GAAGyC,YAQJJ,MAAMC,OAAOC,SALTM,sBAAaC,OAChB,mBAAU,QAAS,UACnBT,MAAMC,OAAOE,oFAMzBX,UAAUkB"}