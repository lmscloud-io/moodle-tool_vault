{"version":3,"file":"install_addon.min.js","sources":["../src/install_addon.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Links to install add-on plugins\n *\n * @module     tool_vault/install_addon\n * @copyright  Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {SELECTORS} from './selectors';\nimport {get_string as getString} from 'core/str';\n\nlet initialised = false;\n\n/**\n * Initialise listeners on the page\n */\nexport const init = () => {\n    if (initialised) {\n        return;\n    }\n    initialised = true;\n    document.addEventListener('click', e => {\n        const target = e.target.closest(SELECTORS.INSTALL_ADDON_LINK);\n        if (target) {\n            e.preventDefault();\n            openInstallAddonForm(target);\n        }\n    });\n};\n\n/**\n * Open form to enter API key\n *\n * @param {Node} el\n */\nconst openInstallAddonForm = (el) => {\n    const args = el.dataset;\n\n    const modalForm = new ModalForm({\n        modalConfig: {\n            title: 'Install add-on plugin',\n        },\n        formClass: '\\\\tool_vault\\\\form\\\\install_plugin_form',\n        args,\n        saveButtonText: getString('continue', 'moodle')\n    });\n\n    // Show a toast notification when the form is submitted.\n    // modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n    //     if (event.detail.result) {\n    //         getString('template_saved', 'feedback').then(addToast).catch();\n    //     } else {\n    //         getString('saving_failed', 'feedback').then(string => {\n    //             return Notification.addNotification({\n    //                 type: 'error',\n    //                 message: string\n    //             });\n    //         }).catch();\n    //     }\n    // });\n\n    // After submitting reresh the page.\n    // installAddonForm.addEventListener(installAddonForm.events.FORM_SUBMITTED, () => location.reload());\n\n    modalForm.show();\n};\n"],"names":["initialised","document","addEventListener","e","target","closest","SELECTORS","INSTALL_ADDON_LINK","preventDefault","openInstallAddonForm","el","args","dataset","ModalForm","modalConfig","title","formClass","saveButtonText","show"],"mappings":";;;;;;;oJA2BIA,aAAc,gBAKE,KACZA,cAGJA,aAAc,EACdC,SAASC,iBAAiB,SAASC,UACzBC,OAASD,EAAEC,OAAOC,QAAQC,qBAAUC,oBACtCH,SACAD,EAAEK,iBACFC,qBAAqBL,oBAU3BK,qBAAwBC,WACpBC,KAAOD,GAAGE,QAEE,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,MAAO,yBAEXC,UAAW,0CACXL,KAAAA,KACAM,gBAAgB,mBAAU,WAAY,YAoBhCC"}