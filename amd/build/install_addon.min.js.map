{"version":3,"file":"install_addon.min.js","sources":["../src/install_addon.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Links to install add-on plugins\n *\n * @module     tool_vault/install_addon\n * @copyright  Marina Glancy\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {SELECTORS} from './selectors';\nimport {get_string as getString} from 'core/str';\nimport Notification from 'core/notification';\n\nlet initialised = false;\nconst CLICOMMAND = '/usr/bin/php admin/tool/vault/cli/addon_plugins.php';\n\n/**\n * Initialise listeners on the page\n */\nexport const init = () => {\n    if (initialised) {\n        return;\n    }\n    initialised = true;\n\n    document.querySelectorAll(SELECTORS.ADDON_PLUGIN_REGION).forEach(pluginRegionNode => {\n        pluginRegionNode.querySelectorAll(SELECTORS.ADDON_VERSION_RADIO).forEach(el => {\n            el.addEventListener('change', () => {\n                updateCliInstructions(pluginRegionNode, el);\n                updateCliInstructionsBulk();\n            });\n        });\n        const initialRadio = pluginRegionNode.querySelector(SELECTORS.ADDON_VERSION_RADIO + ':checked');\n        updateCliInstructions(pluginRegionNode, initialRadio);\n\n        const cliButton = pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_BUTTON);\n        const installButton = pluginRegionNode.dataset.writable ?\n            pluginRegionNode.querySelector(SELECTORS.ADDON_INSTALL_BUTTON) : null;\n\n        installButton?.addEventListener('click', e => {\n            e.preventDefault();\n            if (pluginRegionNode.dataset.isbulk) {\n                openInstallAddonForm(pluginRegionNode.dataset.pluginnames.split(','));\n            } else {\n                openInstallAddonForm([pluginRegionNode.dataset.pluginname]);\n            }\n        });\n\n        cliButton?.addEventListener('click', e => {\n            e.preventDefault();\n            pluginRegionNode.dataset.cliexpanded = `${pluginRegionNode.dataset.cliexpanded}` === \"1\" ? \"0\" : \"1\";\n        });\n    });\n\n    updateCliInstructionsBulk();\n};\n\n/**\n * Return value for the 'cli instructions'\n *\n * @param {Node} pluginRegionNode\n * @param {Node} el selected radio input\n */\nconst updateCliInstructions = (pluginRegionNode, el) => {\n    const cli = pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_REGION);\n    if (!cli) {\n        return;\n    }\n    if (!el) {\n        cli.innerHTML = '';\n        return;\n    }\n    const source = `${el.value}`;\n    const pluginname = pluginRegionNode.dataset.pluginname + el.dataset.exactversion;\n    let commandName = ' --name=' + pluginname;\n    if (pluginRegionNode.dataset.versionlocal) {\n        commandName += ' --overwrite';\n    }\n    if (source === '') {\n        cli.innerHTML = '';\n    } else if (source.match(/^backupkey\\//)) {\n        cli.innerHTML = '<pre>' + CLICOMMAND +\n            ' --backupkey=' + source.substring(10) + commandName + '</pre>';\n    } else {\n        cli.innerHTML = '<pre>' + CLICOMMAND + commandName + '</pre>';\n    }\n};\n\nconst updateCliInstructionsBulk = () => {\n    document.querySelectorAll(SELECTORS.ADDON_PLUGIN_REGION + '[data-isbulk=\"1\"]').forEach(bulkRegion => {\n        const cli = bulkRegion.querySelector(SELECTORS.ADDON_CLI_REGION);\n        if (!cli) {\n            return;\n        }\n        const commands = {};\n        const pluginnames = bulkRegion.dataset.pluginnames.split(',');\n        for (let pluginname of pluginnames) {\n            const pluginRegion = getPluginRegion(pluginname);\n            const el = pluginRegion.querySelector(SELECTORS.ADDON_VERSION_RADIO + ':checked');\n            let k = 'moodleorg';\n            let prefix = CLICOMMAND;\n            if (!el || `${el?.value}` === '') {\n                continue;\n            } else if (el?.value.match(/^backupkey\\//)) {\n                k = el.value.substring(10);\n                prefix += ' --backupkey=' + el.value.substring(10);\n            }\n            commands[k] = ((k in commands) ? `${commands[k]},` : `${prefix} --name=`) + pluginname + el.dataset.exactversion;\n        }\n        if (Object.keys(commands).length) {\n            cli.innerHTML = '<pre>' + Object.values(commands).join(\"\\n\") + '</pre>';\n        } else {\n            cli.innerHTML = '';\n        }\n    });\n};\n\nconst getPluginRegion = (pluginname) =>\n    document.querySelector(SELECTORS.ADDON_PLUGIN_REGION + `[data-pluginname=\"${pluginname}\"]`);\n\n/**\n * Open form to enter API key\n *\n * @param {Array} pluginnames\n */\nconst openInstallAddonForm = (pluginnames) => {\n\n    const args = [];\n    const sources = {};\n    for (let pluginname of pluginnames) {\n        const pluginRegion = getPluginRegion(pluginname);\n        if (pluginRegion?.dataset.writable) {\n            const source = pluginRegion.querySelector(SELECTORS.ADDON_VERSION_RADIO + ':checked')?.value;\n            if (`${source}` !== '') {\n                args.push({pluginname, source});\n                sources[pluginname] = source;\n            }\n        }\n    }\n\n    if (!args.length) {\n        return;\n    }\n\n    const modalForm = new ModalForm({\n        modalConfig: {\n            title: getString('addoninstalldialoguetitle', 'tool_vault'),\n        },\n        formClass: '\\\\tool_vault\\\\form\\\\install_plugin_form',\n        args: {plugins: JSON.stringify(args)},\n        saveButtonText: getString('continue', 'moodle')\n    });\n\n    // Show a toast notification when the form is submitted.\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\n        for (let pluginname of event.detail.installed) {\n            const pluginRegionNode = getPluginRegion(pluginname);\n            pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_BUTTON)?.remove();\n            pluginRegionNode.querySelector(SELECTORS.ADDON_INSTALL_BUTTON)?.remove();\n            pluginRegionNode.querySelector(SELECTORS.ADDON_CLI_REGION)?.remove();\n            pluginRegionNode.querySelectorAll(SELECTORS.ADDON_VERSION_RADIO).forEach(el => {\n                if (el.value !== sources[pluginname]) {\n                    el.closest('label')?.classList.add('dimmed_text');\n                }\n                el.remove();\n            });\n        }\n\n        updateCliInstructionsBulk();\n\n        return Notification.alert(\n            getString('addoninstalldialoguetitle', 'tool_vault'),\n            event.detail.output\n        );\n    });\n\n    modalForm.show();\n};\n"],"names":["initialised","CLICOMMAND","document","querySelectorAll","SELECTORS","ADDON_PLUGIN_REGION","forEach","pluginRegionNode","ADDON_VERSION_RADIO","el","addEventListener","updateCliInstructions","updateCliInstructionsBulk","initialRadio","querySelector","cliButton","ADDON_CLI_BUTTON","installButton","dataset","writable","ADDON_INSTALL_BUTTON","e","preventDefault","isbulk","openInstallAddonForm","pluginnames","split","pluginname","cliexpanded","cli","ADDON_CLI_REGION","innerHTML","source","value","commandName","exactversion","versionlocal","match","substring","bulkRegion","commands","getPluginRegion","k","prefix","Object","keys","length","values","join","args","sources","pluginRegion","_pluginRegion$querySe","push","modalForm","ModalForm","modalConfig","title","formClass","plugins","JSON","stringify","saveButtonText","events","FORM_SUBMITTED","event","detail","installed","remove","closest","classList","add","Notification","alert","output","show"],"mappings":"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"}