define("tool_vault/vault",["exports","core/modal_events","core/notification","core/str","core/pending","core_form/modalform"],(function(_exports,_modal_events,_notification,_str,_pending,_modalform){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Javascript events for the `tool_vault` subsystem.
   *
   * @module tool_vault/vault
   * @copyright 2022 Marina Glancy
   * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.initStartRestore=_exports.initStartDryRun=_exports.initStartBackup=_exports.initResumeRestore=_exports.initCollapseExpandBackupLogs=void 0,_modal_events=_interopRequireDefault(_modal_events),_notification=_interopRequireDefault(_notification),_pending=_interopRequireDefault(_pending),_modalform=_interopRequireDefault(_modalform);const SELECTORS_START_BACKUP='[data-action="startbackup"]',SELECTORS_START_DRYRUN='[data-action="startdryrun"]',SELECTORS_START_RESTORE='[data-action="startrestore"]',SELECTORS_RESUME_RESTORE='[data-action="resumerestore"]';_exports.initStartBackup=()=>{const startBackupButton=document.querySelector(SELECTORS_START_BACKUP);startBackupButton&&startBackupButton.addEventListener("click",(async event=>{event.preventDefault();const pendingPromise=new _pending.default("tool/vault:startBackupPopup"),[title,tempBody,saveButtonText]=await(0,_str.get_strings)([{key:"startbackup",component:"tool_vault"},{key:"pleasewait",component:"tool_vault"},{key:"startbackup",component:"tool_vault"}]),modalForm=new _modalform.default({formClass:"tool_vault\\form\\start_backup_form",modalConfig:{title:title,body:tempBody},saveButtonText:saveButtonText,args:{},returnFocus:startBackupButton});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(c=>{window.location.href=c.detail})),modalForm.addEventListener(modalForm.events.LOADED,(()=>{const button=modalForm.modal.getFooter().find("[data-action='save']");button&&(button.addClass("hidden"),modalForm.modal.getRoot().on(_modal_events.default.bodyRendered,(()=>setTimeout((()=>button.removeClass("hidden")),500))))})),await modalForm.show(),pendingPromise.resolve()}))};const processRestoreButtonClick=function(mainButton,title,isDryRun){var _mainButton$getAttrib;let isResume=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const modalForm=new _modalform.default({formClass:"tool_vault\\form\\start_restore_form",modalConfig:{title:title},saveButtonText:title,args:{dryrun:isDryRun?1:0,resume:isResume?1:0,backupkey:null!==(_mainButton$getAttrib=mainButton.getAttribute("data-backupkey"))&&void 0!==_mainButton$getAttrib?_mainButton$getAttrib:"",encrypted:parseInt(mainButton.getAttribute("data-encrypted"))},returnFocus:mainButton});modalForm.addEventListener(modalForm.events.FORM_SUBMITTED,(c=>{window.location.href=c.detail})),modalForm.show().catch(_notification.default.exception)};_exports.initStartDryRun=backupkey=>{const dryrunButton=document.querySelector(SELECTORS_START_DRYRUN+'[data-backupkey="'.concat(backupkey,'"]'));null==dryrunButton||dryrunButton.addEventListener("click",(event=>{event.preventDefault(),processRestoreButtonClick(dryrunButton,(0,_str.get_string)("startdryrun","tool_vault"),!0)}))};_exports.initStartRestore=backupkey=>{const restoreButton=document.querySelector(SELECTORS_START_RESTORE+'[data-backupkey="'.concat(backupkey,'"]'));null==restoreButton||restoreButton.addEventListener("click",(event=>{event.preventDefault(),processRestoreButtonClick(restoreButton,(0,_str.get_string)("startrestore","tool_vault"),!1)}))};_exports.initResumeRestore=restoreid=>{const restoreForm=document.querySelector(SELECTORS_RESUME_RESTORE+'[data-restoreid="'.concat(restoreid,'"]'));null==restoreForm||restoreForm.addEventListener("click",(event=>{event.preventDefault(),processRestoreButtonClick(restoreForm,(0,_str.get_string)("resumerestore","tool_vault"),!1,!0)}))};_exports.initCollapseExpandBackupLogs=()=>{const logslong=document.querySelector('[data-vault-purpose="logslong"]'),logsshort=document.querySelector('[data-vault-purpose="logsshort"]');return logslong&&logsshort&&(logslong.querySelector('[data-vault-purpose="togglelogs"]').addEventListener("click",(event=>{event.preventDefault(),logsshort.style.display="block",logslong.style.display="none"})),logsshort.querySelector('[data-vault-purpose="togglelogs"]').addEventListener("click",(event=>{event.preventDefault(),logsshort.style.display="none",logslong.style.display="block"}))),!1}}));

//# sourceMappingURL=vault.min.js.map