{"version":3,"file":"vault.min.js","sources":["../src/vault.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `tool_vault` subsystem.\n *\n * @module tool_vault/vault\n * @copyright 2022 Marina Glancy\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport Pending from 'core/pending';\n\nconst SELECTORS = {\n    START_BACKUP: 'form[data-action=\"startbackup\"]',\n    START_DRYRUN: 'form[data-action=\"startdryrun\"]',\n    START_RESTORE: 'form[data-action=\"startrestore\"]',\n};\n\nconst submitForm = (backupForm, modal) => {\n    const popupBody = modal.getBody()[0];\n    for (let i of ['passphrase', 'description']) {\n        const el1 = popupBody.querySelector(`input[name=\"${i}\"]`),\n            el2 = backupForm.querySelector(`input[name=\"${i}\"]`);\n        if (el1 && el2) {\n            el2.value = el1.value;\n        }\n    }\n    backupForm.setAttribute('action', backupForm.getAttribute('data-url'));\n    backupForm.submit();\n};\n\n/**\n * Register listener for \"start backup\" button\n */\nexport const initStartBackup = () => {\n    const backupForm = document.querySelector(SELECTORS.START_BACKUP);\n    if (!backupForm) {\n        return;\n    }\n    backupForm.addEventListener('submit', event => {\n        event.preventDefault();\n        const pendingPromise = new Pending('tool/vault:startBackupPopup');\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('startbackup', 'tool_vault'),\n            body: Templates.render('tool_vault/start_backup_popup',\n                {description: backupForm.querySelector('input[name=\"description\"]').value}),\n            buttons: {save: getString('startbackup', 'tool_vault')},\n            removeOnClose: true\n        })\n            .then(function(modal) {\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.save, () => submitForm(backupForm, modal));\n                modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n                modal.getRoot().on(ModalEvents.bodyRendered, () => pendingPromise.resolve());\n                return modal;\n            })\n            .catch(Notification.exception);\n    });\n};\n\nexport const initStartDryRun = (backupkey) => {\n    const dryrunForm = document.querySelector(SELECTORS.START_DRYRUN + `[data-backupkey=\"${backupkey}\"]`);\n    if (!dryrunForm) {\n        return;\n    }\n    dryrunForm.addEventListener('submit', event => {\n        event.preventDefault();\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('startdryrun', 'tool_vault'),\n            body: Templates.render('tool_vault/start_restore_popup',\n                {dryrun: 1, encrypted: parseInt(dryrunForm.getAttribute('data-encrypted'))}),\n            buttons: {save: getString('startdryrun', 'tool_vault')},\n            removeOnClose: true\n        })\n            .then(function(modal) {\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.save, () => submitForm(dryrunForm, modal));\n                modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n\n                return modal;\n            })\n            .catch(Notification.exception);\n    });\n};\n\nexport const initStartRestore = (backupkey) => {\n    const restoreForm = document.querySelector(SELECTORS.START_RESTORE + `[data-backupkey=\"${backupkey}\"]`);\n    if (!restoreForm) {\n        return;\n    }\n    restoreForm.addEventListener('submit', event => {\n        event.preventDefault();\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('startrestore', 'tool_vault'),\n            body: Templates.render('tool_vault/start_restore_popup',\n                {dryrun: 0, encrypted: parseInt(restoreForm.getAttribute('data-encrypted'))}),\n            buttons: {save: getString('startrestore', 'tool_vault')},\n            removeOnClose: true\n        })\n            .then(function(modal) {\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.save, () => submitForm(restoreForm, modal));\n                modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n\n                return modal;\n            })\n            .catch(Notification.exception);\n    });\n};\n"],"names":["SELECTORS","submitForm","backupForm","modal","popupBody","getBody","i","el1","querySelector","el2","value","setAttribute","getAttribute","submit","document","addEventListener","event","preventDefault","pendingPromise","Pending","create","type","ModalFactory","types","SAVE_CANCEL","title","body","Templates","render","description","buttons","save","removeOnClose","then","show","getRoot","on","ModalEvents","cancel","hide","bodyRendered","resolve","catch","Notification","exception","backupkey","dryrunForm","dryrun","encrypted","parseInt","restoreForm"],"mappings":";;;;;;;4YA8BMA,uBACY,kCADZA,uBAEY,kCAFZA,wBAGa,mCAGbC,WAAa,CAACC,WAAYC,eACtBC,UAAYD,MAAME,UAAU,OAC7B,IAAIC,IAAK,CAAC,aAAc,eAAgB,OACnCC,IAAMH,UAAUI,oCAA6BF,SAC/CG,IAAMP,WAAWM,oCAA6BF,SAC9CC,KAAOE,MACPA,IAAIC,MAAQH,IAAIG,OAGxBR,WAAWS,aAAa,SAAUT,WAAWU,aAAa,aAC1DV,WAAWW,mCAMgB,WACrBX,WAAaY,SAASN,cAAcR,wBACrCE,YAGLA,WAAWa,iBAAiB,UAAUC,QAClCA,MAAMC,uBACAC,eAAiB,IAAIC,iBAAQ,sDACtBC,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,OAAO,mBAAU,cAAe,cAChCC,KAAMC,mBAAUC,OAAO,gCACnB,CAACC,YAAa3B,WAAWM,cAAc,6BAA6BE,QACxEoB,QAAS,CAACC,MAAM,mBAAU,cAAe,eACzCC,eAAe,IAEdC,MAAK,SAAS9B,cACXA,MAAM+B,OAEN/B,MAAMgC,UAAUC,GAAGC,sBAAYN,MAAM,IAAM9B,WAAWC,WAAYC,SAClEA,MAAMgC,UAAUC,GAAGC,sBAAYC,QAAQ,IAAMnC,MAAMoC,SACnDpC,MAAMgC,UAAUC,GAAGC,sBAAYG,cAAc,IAAMtB,eAAeuB,YAC3DtC,SAEVuC,MAAMC,sBAAaC,wCAIAC,kBACtBC,WAAahC,SAASN,cAAcR,kDAA6C6C,iBAClFC,YAGLA,WAAW/B,iBAAiB,UAAUC,QAClCA,MAAMC,wCACOG,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,OAAO,mBAAU,cAAe,cAChCC,KAAMC,mBAAUC,OAAO,iCACnB,CAACmB,OAAQ,EAAGC,UAAWC,SAASH,WAAWlC,aAAa,qBAC5DkB,QAAS,CAACC,MAAM,mBAAU,cAAe,eACzCC,eAAe,IAEdC,MAAK,SAAS9B,cACXA,MAAM+B,OAEN/B,MAAMgC,UAAUC,GAAGC,sBAAYN,MAAM,IAAM9B,WAAW6C,WAAY3C,SAClEA,MAAMgC,UAAUC,GAAGC,sBAAYC,QAAQ,IAAMnC,MAAMoC,SAE5CpC,SAEVuC,MAAMC,sBAAaC,yCAICC,kBACvBK,YAAcpC,SAASN,cAAcR,mDAA8C6C,iBACpFK,aAGLA,YAAYnC,iBAAiB,UAAUC,QACnCA,MAAMC,wCACOG,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,YACzBC,OAAO,mBAAU,eAAgB,cACjCC,KAAMC,mBAAUC,OAAO,iCACnB,CAACmB,OAAQ,EAAGC,UAAWC,SAASC,YAAYtC,aAAa,qBAC7DkB,QAAS,CAACC,MAAM,mBAAU,eAAgB,eAC1CC,eAAe,IAEdC,MAAK,SAAS9B,cACXA,MAAM+B,OAEN/B,MAAMgC,UAAUC,GAAGC,sBAAYN,MAAM,IAAM9B,WAAWiD,YAAa/C,SACnEA,MAAMgC,UAAUC,GAAGC,sBAAYC,QAAQ,IAAMnC,MAAMoC,SAE5CpC,SAEVuC,MAAMC,sBAAaC"}