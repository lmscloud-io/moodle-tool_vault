{"version":3,"file":"vault.min.js","sources":["../src/vault.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `tool_vault` subsystem.\n *\n * @module tool_vault/vault\n * @copyright 2022 Marina Glancy\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport Pending from 'core/pending';\nimport Fragment from 'core/fragment';\n\nconst SELECTORS = {\n    START_BACKUP: 'form[data-action=\"startbackup\"]',\n    START_DRYRUN: 'form[data-action=\"startdryrun\"]',\n    START_RESTORE: 'form[data-action=\"startrestore\"]',\n};\n\nconst submitForm = (backupForm, modal) => {\n    const popupBody = modal.getBody()[0];\n    for (let i of ['passphrase', 'description']) {\n        const el1 = popupBody.querySelector(`input[name=\"${i}\"]`),\n            el2 = backupForm.querySelector(`input[name=\"${i}\"]`);\n        if (el1 && el2) {\n            el2.value = el1.value;\n        }\n    }\n    backupForm.setAttribute('action', backupForm.getAttribute('data-url'));\n    backupForm.submit();\n};\n\n/**\n * Loads a fragment with a popup showing a spinner while the fragment is loading.\n * In case of an error, the error message is shown in the same popup.\n *\n * @param {String} title\n * @param {String} tempBody\n * @param {String} fragmentName\n * @param {Number} contextid\n * @param {Object} args\n * @returns Promise\n */\nconst loadFragmentWithPopup = async(title, tempBody, fragmentName, contextid, args = {}) => {\n    let activeModal = null;\n    let fragment = null;\n    try {\n        activeModal = await ModalFactory.create({\n            type: ModalFactory.types.CANCEL,\n            title,\n            body: tempBody,\n            removeOnClose: true\n        });\n        activeModal.show();\n        fragment = await Fragment.loadFragment('tool_vault', fragmentName, contextid, args);\n        activeModal.hide();\n    } catch (e) {\n        if (activeModal) {\n            activeModal.setBody(e.message);\n        } else {\n            Notification.exception(e);\n        }\n    }\n    return fragment;\n};\n\n/**\n * Register listener for \"start backup\" button\n */\nexport const initStartBackup = () => {\n    const backupForm = document.querySelector(SELECTORS.START_BACKUP);\n    if (!backupForm) {\n        return;\n    }\n    const contextid = backupForm.getAttribute('data-contextid');\n    backupForm.addEventListener('submit', async(event) => {\n        event.preventDefault();\n        const pendingPromise = new Pending('tool/vault:startBackupPopup');\n\n        const [title, tempBody, saveButtonText] = await getStrings([\n            {key: 'startbackup', component: 'tool_vault'},\n            {key: 'pleasewait', component: 'tool_vault'},\n            {key: 'startbackup', component: 'tool_vault'}\n        ]);\n        const fragment = await loadFragmentWithPopup(title, tempBody, 'start_backup', contextid);\n\n        if (!fragment) {\n            pendingPromise.resolve();\n            return;\n        }\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title,\n            body: fragment,\n            buttons: {save: saveButtonText},\n            removeOnClose: true\n        });\n        modal.show();\n\n        modal.getRoot().on(ModalEvents.save, () => submitForm(backupForm, modal));\n        modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n        modal.getRoot().on(ModalEvents.bodyRendered, () => pendingPromise.resolve());\n    });\n};\n\nexport const initStartDryRun = (backupkey) => {\n    const dryrunForm = document.querySelector(SELECTORS.START_DRYRUN + `[data-backupkey=\"${backupkey}\"]`);\n    if (!dryrunForm) {\n        return;\n    }\n    dryrunForm.addEventListener('submit', event => {\n        event.preventDefault();\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('startdryrun', 'tool_vault'),\n            body: Templates.render('tool_vault/start_restore_popup',\n                {dryrun: 1, encrypted: parseInt(dryrunForm.getAttribute('data-encrypted'))}),\n            buttons: {save: getString('startdryrun', 'tool_vault')},\n            removeOnClose: true\n        })\n            .then(function(modal) {\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.save, () => submitForm(dryrunForm, modal));\n                modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n\n                return modal;\n            })\n            .catch(Notification.exception);\n    });\n};\n\nexport const initStartRestore = (backupkey) => {\n    const restoreForm = document.querySelector(SELECTORS.START_RESTORE + `[data-backupkey=\"${backupkey}\"]`);\n    if (!restoreForm) {\n        return;\n    }\n    restoreForm.addEventListener('submit', event => {\n        event.preventDefault();\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: getString('startrestore', 'tool_vault'),\n            body: Templates.render('tool_vault/start_restore_popup',\n                {dryrun: 0, encrypted: parseInt(restoreForm.getAttribute('data-encrypted'))}),\n            buttons: {save: getString('startrestore', 'tool_vault')},\n            removeOnClose: true\n        })\n            .then(function(modal) {\n                modal.show();\n\n                modal.getRoot().on(ModalEvents.save, () => submitForm(restoreForm, modal));\n                modal.getRoot().on(ModalEvents.cancel, () => modal.hide());\n\n                return modal;\n            })\n            .catch(Notification.exception);\n    });\n};\n\nexport const initCollapseExpandBackupLogs = () => {\n    const logslong = document.querySelector(`[data-vault-purpose=\"logslong\"]`);\n    const logsshort = document.querySelector(`[data-vault-purpose=\"logsshort\"]`);\n    if (logslong && logsshort) {\n        logslong.querySelector(`[data-vault-purpose=\"togglelogs\"]`).addEventListener('click', event => {\n            event.preventDefault();\n            logsshort.style.display = 'block';\n            logslong.style.display = 'none';\n        });\n        logsshort.querySelector(`[data-vault-purpose=\"togglelogs\"]`).addEventListener('click', event => {\n            event.preventDefault();\n            logsshort.style.display = 'none';\n            logslong.style.display = 'block';\n        });\n    }\n    return false;\n};\n"],"names":["SELECTORS","submitForm","backupForm","modal","popupBody","getBody","i","el1","querySelector","el2","value","setAttribute","getAttribute","submit","document","contextid","addEventListener","async","event","preventDefault","pendingPromise","Pending","title","tempBody","saveButtonText","key","component","fragment","fragmentName","args","activeModal","ModalFactory","create","type","types","CANCEL","body","removeOnClose","show","Fragment","loadFragment","hide","e","setBody","message","exception","loadFragmentWithPopup","resolve","SAVE_CANCEL","buttons","save","getRoot","on","ModalEvents","cancel","bodyRendered","backupkey","dryrunForm","Templates","render","dryrun","encrypted","parseInt","then","catch","Notification","restoreForm","logslong","logsshort","style","display"],"mappings":"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"}