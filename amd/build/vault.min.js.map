{"version":3,"file":"vault.min.js","sources":["../src/vault.js"],"sourcesContent":["// This file is part of plugin tool_vault - https://lmsvault.io\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript events for the `tool_vault` subsystem.\n *\n * @module tool_vault/vault\n * @copyright 2022 Marina Glancy\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\nimport {get_string as getString, get_strings as getStrings} from 'core/str';\nimport Pending from 'core/pending';\nimport ModalForm from 'core_form/modalform';\n\nconst SELECTORS = {\n    START_BACKUP: '[data-action=\"startbackup\"]',\n    START_DRYRUN: '[data-action=\"startdryrun\"]',\n    START_RESTORE: '[data-action=\"startrestore\"]',\n    RESUME_RESTORE: '[data-action=\"resumerestore\"]',\n};\n\n/**\n * Register listener for \"start backup\" button\n */\nexport const initStartBackup = () => {\n    const startBackupButton = document.querySelector(SELECTORS.START_BACKUP);\n    if (!startBackupButton) {\n        return;\n    }\n    startBackupButton.addEventListener('click', async(event) => {\n        event.preventDefault();\n        const pendingPromise = new Pending('tool/vault:startBackupPopup');\n        const [title, tempBody, saveButtonText] = await getStrings([\n            {key: 'startbackup', component: 'tool_vault'},\n            {key: 'pleasewait', component: 'tool_vault'},\n            {key: 'startbackup', component: 'tool_vault'}\n        ]);\n\n        const modalForm = new ModalForm({\n            formClass: 'tool_vault\\\\form\\\\start_backup_form',\n            modalConfig: {title, body: tempBody},\n            saveButtonText: saveButtonText,\n            args: {},\n            returnFocus: startBackupButton,\n        });\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (c) => {\n            window.location.href = c.detail;\n        });\n        modalForm.addEventListener(modalForm.events.LOADED, () => {\n            const button = modalForm.modal.getFooter().find(\"[data-action='save']\");\n            if (button) {\n                button.addClass('hidden');\n                modalForm.modal.getRoot().on(ModalEvents.bodyRendered, () =>\n                    setTimeout(() => button.removeClass('hidden'), 500));\n            }\n        });\n        await modalForm.show();\n        pendingPromise.resolve();\n    });\n};\n\nconst processRestoreButtonClick = (mainButton, title, isDryRun, isResume = false) => {\n    const modalForm = new ModalForm({\n        formClass: 'tool_vault\\\\form\\\\start_restore_form',\n        modalConfig: {title},\n        saveButtonText: title,\n        args: {\n            dryrun: isDryRun ? 1 : 0,\n            resume: isResume ? 1 : 0,\n            backupkey: mainButton.getAttribute('data-backupkey') ?? '',\n            encrypted: parseInt(mainButton.getAttribute('data-encrypted')),\n        },\n        returnFocus: mainButton,\n    });\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (c) => {\n        window.location.href = c.detail;\n    });\n    modalForm.show().catch(Notification.exception);\n};\n\nexport const initStartDryRun = (backupkey) => {\n    const dryrunButton = document.querySelector(SELECTORS.START_DRYRUN + `[data-backupkey=\"${backupkey}\"]`);\n    dryrunButton?.addEventListener('click', (event) => {\n        event.preventDefault();\n        processRestoreButtonClick(dryrunButton, getString('startdryrun', 'tool_vault'), true);\n    });\n};\n\nexport const initStartRestore = (backupkey) => {\n    const restoreButton = document.querySelector(SELECTORS.START_RESTORE + `[data-backupkey=\"${backupkey}\"]`);\n    restoreButton?.addEventListener('click', (event) => {\n        event.preventDefault();\n        processRestoreButtonClick(restoreButton, getString('startrestore', 'tool_vault'), false);\n    });\n};\n\nexport const initResumeRestore = (restoreid) => {\n    const restoreForm = document.querySelector(SELECTORS.RESUME_RESTORE + `[data-restoreid=\"${restoreid}\"]`);\n    restoreForm?.addEventListener('click', event => {\n        event.preventDefault();\n        processRestoreButtonClick(restoreForm, getString('resumerestore', 'tool_vault'), false, true);\n    });\n};\n\nexport const initCollapseExpandBackupLogs = () => {\n    const logslong = document.querySelector(`[data-vault-purpose=\"logslong\"]`);\n    const logsshort = document.querySelector(`[data-vault-purpose=\"logsshort\"]`);\n    if (logslong && logsshort) {\n        logslong.querySelector(`[data-vault-purpose=\"togglelogs\"]`).addEventListener('click', event => {\n            event.preventDefault();\n            logsshort.style.display = 'block';\n            logslong.style.display = 'none';\n        });\n        logsshort.querySelector(`[data-vault-purpose=\"togglelogs\"]`).addEventListener('click', event => {\n            event.preventDefault();\n            logsshort.style.display = 'none';\n            logslong.style.display = 'block';\n        });\n    }\n    return false;\n};\n"],"names":["SELECTORS","startBackupButton","document","querySelector","addEventListener","async","event","preventDefault","pendingPromise","Pending","title","tempBody","saveButtonText","key","component","modalForm","ModalForm","formClass","modalConfig","body","args","returnFocus","events","FORM_SUBMITTED","c","window","location","href","detail","LOADED","button","modal","getFooter","find","addClass","getRoot","on","ModalEvents","bodyRendered","setTimeout","removeClass","show","resolve","processRestoreButtonClick","mainButton","isDryRun","isResume","dryrun","resume","backupkey","getAttribute","encrypted","parseInt","catch","Notification","exception","dryrunButton","restoreButton","restoreid","restoreForm","logslong","logsshort","style","display"],"mappings":";;;;;;;uZA6BMA,uBACY,8BADZA,uBAEY,8BAFZA,wBAGa,+BAHbA,yBAIc,yDAMW,WACrBC,kBAAoBC,SAASC,cAAcH,wBAC5CC,mBAGLA,kBAAkBG,iBAAiB,SAASC,MAAAA,QACxCC,MAAMC,uBACAC,eAAiB,IAAIC,iBAAQ,gCAC5BC,MAAOC,SAAUC,sBAAwB,oBAAW,CACvD,CAACC,IAAK,cAAeC,UAAW,cAChC,CAACD,IAAK,aAAcC,UAAW,cAC/B,CAACD,IAAK,cAAeC,UAAW,gBAG9BC,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,sCACXC,YAAa,CAACR,MAAAA,MAAOS,KAAMR,UAC3BC,eAAgBA,eAChBQ,KAAM,GACNC,YAAapB,oBAEjBc,UAAUX,iBAAiBW,UAAUO,OAAOC,gBAAiBC,IACzDC,OAAOC,SAASC,KAAOH,EAAEI,UAE7Bb,UAAUX,iBAAiBW,UAAUO,OAAOO,QAAQ,WAC1CC,OAASf,UAAUgB,MAAMC,YAAYC,KAAK,wBAC5CH,SACAA,OAAOI,SAAS,UAChBnB,UAAUgB,MAAMI,UAAUC,GAAGC,sBAAYC,cAAc,IACnDC,YAAW,IAAMT,OAAOU,YAAY,WAAW,iBAGrDzB,UAAU0B,OAChBjC,eAAekC,oBAIjBC,0BAA4B,SAACC,WAAYlC,MAAOmC,wCAAUC,uEACtD/B,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,uCACXC,YAAa,CAACR,MAAAA,OACdE,eAAgBF,MAChBU,KAAM,CACF2B,OAAQF,SAAW,EAAI,EACvBG,OAAQF,SAAW,EAAI,EACvBG,wCAAWL,WAAWM,aAAa,yEAAqB,GACxDC,UAAWC,SAASR,WAAWM,aAAa,oBAEhD7B,YAAauB,aAEjB7B,UAAUX,iBAAiBW,UAAUO,OAAOC,gBAAiBC,IACzDC,OAAOC,SAASC,KAAOH,EAAEI,UAE7Bb,UAAU0B,OAAOY,MAAMC,sBAAaC,qCAGRN,kBACtBO,aAAetD,SAASC,cAAcH,kDAA6CiD,iBACzFO,MAAAA,cAAAA,aAAcpD,iBAAiB,SAAUE,QACrCA,MAAMC,iBACNoC,0BAA0Ba,cAAc,mBAAU,cAAe,eAAe,iCAIvDP,kBACvBQ,cAAgBvD,SAASC,cAAcH,mDAA8CiD,iBAC3FQ,MAAAA,eAAAA,cAAerD,iBAAiB,SAAUE,QACtCA,MAAMC,iBACNoC,0BAA0Bc,eAAe,mBAAU,eAAgB,eAAe,kCAIxDC,kBACxBC,YAAczD,SAASC,cAAcH,oDAA+C0D,iBAC1FC,MAAAA,aAAAA,YAAavD,iBAAiB,SAASE,QACnCA,MAAMC,iBACNoC,0BAA0BgB,aAAa,mBAAU,gBAAiB,eAAe,GAAO,6CAIpD,WAClCC,SAAW1D,SAASC,iDACpB0D,UAAY3D,SAASC,yDACvByD,UAAYC,YACZD,SAASzD,mDAAmDC,iBAAiB,SAASE,QAClFA,MAAMC,iBACNsD,UAAUC,MAAMC,QAAU,QAC1BH,SAASE,MAAMC,QAAU,UAE7BF,UAAU1D,mDAAmDC,iBAAiB,SAASE,QACnFA,MAAMC,iBACNsD,UAAUC,MAAMC,QAAU,OAC1BH,SAASE,MAAMC,QAAU,aAG1B"}